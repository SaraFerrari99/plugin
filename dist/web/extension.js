(()=>{var t={470:(t,n,e)=>{"use strict";var o=e(155);function i(t){if("string"!=typeof t)throw new TypeError("Path must be a string. Received "+JSON.stringify(t))}function r(t,n){for(var e,o="",i=0,r=-1,a=0,s=0;s<=t.length;++s){if(s<t.length)e=t.charCodeAt(s);else{if(47===e)break;e=47}if(47===e){if(r===s-1||1===a);else if(r!==s-1&&2===a){if(o.length<2||2!==i||46!==o.charCodeAt(o.length-1)||46!==o.charCodeAt(o.length-2))if(o.length>2){var l=o.lastIndexOf("/");if(l!==o.length-1){-1===l?(o="",i=0):i=(o=o.slice(0,l)).length-1-o.lastIndexOf("/"),r=s,a=0;continue}}else if(2===o.length||1===o.length){o="",i=0,r=s,a=0;continue}n&&(o.length>0?o+="/..":o="..",i=2)}else o.length>0?o+="/"+t.slice(r+1,s):o=t.slice(r+1,s),i=s-r-1;r=s,a=0}else 46===e&&-1!==a?++a:a=-1}return o}var a={resolve:function(){for(var t,n="",e=!1,a=arguments.length-1;a>=-1&&!e;a--){var s;a>=0?s=arguments[a]:(void 0===t&&(t=o.cwd()),s=t),i(s),0!==s.length&&(n=s+"/"+n,e=47===s.charCodeAt(0))}return n=r(n,!e),e?n.length>0?"/"+n:"/":n.length>0?n:"."},normalize:function(t){if(i(t),0===t.length)return".";var n=47===t.charCodeAt(0),e=47===t.charCodeAt(t.length-1);return 0!==(t=r(t,!n)).length||n||(t="."),t.length>0&&e&&(t+="/"),n?"/"+t:t},isAbsolute:function(t){return i(t),t.length>0&&47===t.charCodeAt(0)},join:function(){if(0===arguments.length)return".";for(var t,n=0;n<arguments.length;++n){var e=arguments[n];i(e),e.length>0&&(void 0===t?t=e:t+="/"+e)}return void 0===t?".":a.normalize(t)},relative:function(t,n){if(i(t),i(n),t===n)return"";if((t=a.resolve(t))===(n=a.resolve(n)))return"";for(var e=1;e<t.length&&47===t.charCodeAt(e);++e);for(var o=t.length,r=o-e,s=1;s<n.length&&47===n.charCodeAt(s);++s);for(var l=n.length-s,c=r<l?r:l,d=-1,p=0;p<=c;++p){if(p===c){if(l>c){if(47===n.charCodeAt(s+p))return n.slice(s+p+1);if(0===p)return n.slice(s+p)}else r>c&&(47===t.charCodeAt(e+p)?d=p:0===p&&(d=0));break}var u=t.charCodeAt(e+p);if(u!==n.charCodeAt(s+p))break;47===u&&(d=p)}var h="";for(p=e+d+1;p<=o;++p)p!==o&&47!==t.charCodeAt(p)||(0===h.length?h+="..":h+="/..");return h.length>0?h+n.slice(s+d):(s+=d,47===n.charCodeAt(s)&&++s,n.slice(s))},_makeLong:function(t){return t},dirname:function(t){if(i(t),0===t.length)return".";for(var n=t.charCodeAt(0),e=47===n,o=-1,r=!0,a=t.length-1;a>=1;--a)if(47===(n=t.charCodeAt(a))){if(!r){o=a;break}}else r=!1;return-1===o?e?"/":".":e&&1===o?"//":t.slice(0,o)},basename:function(t,n){if(void 0!==n&&"string"!=typeof n)throw new TypeError('"ext" argument must be a string');i(t);var e,o=0,r=-1,a=!0;if(void 0!==n&&n.length>0&&n.length<=t.length){if(n.length===t.length&&n===t)return"";var s=n.length-1,l=-1;for(e=t.length-1;e>=0;--e){var c=t.charCodeAt(e);if(47===c){if(!a){o=e+1;break}}else-1===l&&(a=!1,l=e+1),s>=0&&(c===n.charCodeAt(s)?-1==--s&&(r=e):(s=-1,r=l))}return o===r?r=l:-1===r&&(r=t.length),t.slice(o,r)}for(e=t.length-1;e>=0;--e)if(47===t.charCodeAt(e)){if(!a){o=e+1;break}}else-1===r&&(a=!1,r=e+1);return-1===r?"":t.slice(o,r)},extname:function(t){i(t);for(var n=-1,e=0,o=-1,r=!0,a=0,s=t.length-1;s>=0;--s){var l=t.charCodeAt(s);if(47!==l)-1===o&&(r=!1,o=s+1),46===l?-1===n?n=s:1!==a&&(a=1):-1!==n&&(a=-1);else if(!r){e=s+1;break}}return-1===n||-1===o||0===a||1===a&&n===o-1&&n===e+1?"":t.slice(n,o)},format:function(t){if(null===t||"object"!=typeof t)throw new TypeError('The "pathObject" argument must be of type Object. Received type '+typeof t);return function(t,n){var e=n.dir||n.root,o=n.base||(n.name||"")+(n.ext||"");return e?e===n.root?e+o:e+"/"+o:o}(0,t)},parse:function(t){i(t);var n={root:"",dir:"",base:"",ext:"",name:""};if(0===t.length)return n;var e,o=t.charCodeAt(0),r=47===o;r?(n.root="/",e=1):e=0;for(var a=-1,s=0,l=-1,c=!0,d=t.length-1,p=0;d>=e;--d)if(47!==(o=t.charCodeAt(d)))-1===l&&(c=!1,l=d+1),46===o?-1===a?a=d:1!==p&&(p=1):-1!==a&&(p=-1);else if(!c){s=d+1;break}return-1===a||-1===l||0===p||1===p&&a===l-1&&a===s+1?-1!==l&&(n.base=n.name=0===s&&r?t.slice(1,l):t.slice(s,l)):(0===s&&r?(n.name=t.slice(1,a),n.base=t.slice(1,l)):(n.name=t.slice(s,a),n.base=t.slice(s,l)),n.ext=t.slice(a,l)),s>0?n.dir=t.slice(0,s-1):r&&(n.dir="/"),n},sep:"/",delimiter:":",win32:null,posix:null};a.posix=a,t.exports=a},155:t=>{var n,e,o=t.exports={};function i(){throw new Error("setTimeout has not been defined")}function r(){throw new Error("clearTimeout has not been defined")}function a(t){if(n===setTimeout)return setTimeout(t,0);if((n===i||!n)&&setTimeout)return n=setTimeout,setTimeout(t,0);try{return n(t,0)}catch(e){try{return n.call(null,t,0)}catch(e){return n.call(this,t,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:i}catch(t){n=i}try{e="function"==typeof clearTimeout?clearTimeout:r}catch(t){e=r}}();var s,l=[],c=!1,d=-1;function p(){c&&s&&(c=!1,s.length?l=s.concat(l):d=-1,l.length&&u())}function u(){if(!c){var t=a(p);c=!0;for(var n=l.length;n;){for(s=l,l=[];++d<n;)s&&s[d].run();d=-1,n=l.length}s=null,c=!1,function(t){if(e===clearTimeout)return clearTimeout(t);if((e===r||!e)&&clearTimeout)return e=clearTimeout,clearTimeout(t);try{return e(t)}catch(n){try{return e.call(null,t)}catch(n){return e.call(this,t)}}}(t)}}function h(t,n){this.fun=t,this.array=n}function m(){}o.nextTick=function(t){var n=new Array(arguments.length-1);if(arguments.length>1)for(var e=1;e<arguments.length;e++)n[e-1]=arguments[e];l.push(new h(t,n)),1!==l.length||c||a(u)},h.prototype.run=function(){this.fun.apply(null,this.array)},o.title="browser",o.browser=!0,o.env={},o.argv=[],o.version="",o.versions={},o.on=m,o.addListener=m,o.once=m,o.off=m,o.removeListener=m,o.removeAllListeners=m,o.emit=m,o.prependListener=m,o.prependOnceListener=m,o.listeners=function(t){return[]},o.binding=function(t){throw new Error("process.binding is not supported")},o.cwd=function(){return"/"},o.chdir=function(t){throw new Error("process.chdir is not supported")},o.umask=function(){return 0}},496:t=>{"use strict";t.exports=require("vscode")}},n={};function e(o){var i=n[o];if(void 0!==i)return i.exports;var r=n[o]={exports:{}};return t[o](r,r.exports,e),r.exports}var o={};(()=>{"use strict";var t=o;Object.defineProperty(t,"__esModule",{value:!0}),t.activate=void 0;const n=e(496),i=e(470).join("/","media","Bell2.png");console.log(i);let r="",a="",s="";class l{constructor(){this.data=[new d("HOME")]}getTreeItem(t){return t}getChildren(t){return void 0===t?this.data:t.children}}class c extends n.TreeItem{constructor(t,e){super(t,void 0===e?n.TreeItemCollapsibleState.None:n.TreeItemCollapsibleState.Expanded),this.children=e}}class d extends c{constructor(t){super(t),this.command={command:"extension.welcome",title:"Welcome"};const e=n.Uri.file(i).with({scheme:"vscode-resource"});this.iconPath=e}}t.activate=function(t){console.log('Congratulations, your extension "helloworld-sample" is now active!'),n.window.registerTreeDataProvider("nodeDependencies",new l),n.commands.registerCommand("treeExplorer.openFile",(t=>{n.window.showTextDocument(t)}));const e=n.commands.registerCommand("extension.helloWorld",(()=>{n.window.showErrorMessage("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa")}));n.commands.registerCommand("extension.welcome",(()=>{const e=n.window.createWebviewPanel("welcome","welcome",n.ViewColumn.One,{enableScripts:!0});e.title="Polyglot",e.webview.html='<!DOCTYPE html>\n\t<html lang="en">\n\t<head>\n\t\t<meta charset="UTF-8">\n\t\t<meta name="viewport" content="width=device-width, initial-scale=1.0">\n\t\t<title>Welcome</title>\n\n\t\t<link rel="stylesheet" href="https://unpkg.com/vscode-codicons@4.0.0/dist/codicon.css">\n    \t<link rel="stylesheet" href="https://unpkg.com/vscode-codicons@4.0.0/dist/codicon.css">\n  \n\t<style>\n\n\t\tbody{\n\t\t\tfont-family: \'Arial\', sans-serif;\n\t\t}\n\n\t\tbody.vscode-dark{\n\t\t\tbackground-color: var(--vscode-editor-background);\n\t\t\tcolor: var(--vscode-foreground);\n\t\t}\n\n\t\tbody.vscode-light{\n\t\t\tbackground-color: var(--vscode-editor-background);\n\t\t\tcolor: var(--vscode-foreground);\n\t\t}\n  \n\t  .total_screen{\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\toverflow: hidden;\n\t\theight: 100vh;\n\t  }\n  \n\t  .first_line{\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tborder-bottom: 1px solid var(--vscode-editor-foreground);\n  \n\t\t.Bell {\n\t\t\twidth: 40px;\n\t\t\theight: 39px;\n\t\t\tbackground-color: transparent;\n\t\t\tcursor: pointer;\n\t\t\tdisplay: inline-block;\n\t\t}\n\t\n\t\t.Bell.vscode-button {\n\t\t\tbackground: transparent;\n\t\t\tborder: 0;\n\t\t\tbox-shadow: none;\n\t\t\tpadding: 0;\n\t\t\tdisplay: inline-flex;\n\t\t\talign-items: center;\n\t\t\tjustify-content: center;\n\t\t\tcursor: pointer;\n\t\t\theight: 30px;\n\t\t\twidth: 29px;\n\t\t\tborder-radius: 4px;\n\t\t\toverflow: hidden;\n\t\t}\n\t\n\t\t/* Regola l\'immagine per adattarla alle dimensioni del bottone */\n\t\t.Bell.vscode-button .bell-image {\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t\tobject-fit: cover; /* Adatta l\'immagine mantenendo le proporzioni */\n\t\t}\n\n\t\t.Question {\n\t\t\twidth: 27px;\n\t\t\theight: 26px;\n\t\t\tbackground-color: transparent;\n\t\t\tcursor: pointer;\n\t\t\tdisplay: inline-block;\n\t\t}\n\t\n\t\t.Question.vscode-button {\n\t\t\tbackground: transparent;\n\t\t\tborder: 0;\n\t\t\tbox-shadow: none;\n\t\t\tpadding: 0;\n\t\t\tdisplay: inline-flex;\n\t\t\talign-items: center;\n\t\t\tjustify-content: center;\n\t\t\tcurs.or: pointer;\n\t\t\theight: 27px;\n\t\t\twidth: 26px;\n\t\t\tborder-radius: 4px;\n\t\t\toverflow: hidden;\n\t\t}\n\t\n\t\t/* Regola l\'immagine per adattarla alle dimensioni del bottone */\n\t\t.Question.vscode-button .question-image {\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t\tobject-fit: cover; /* Adatta l\'immagine mantenendo le proporzioni */\n\t\t}\n\t\t\n\t\t.Mask {\n\t\t\twidth: 30px;\n\t\t\theight: 29px;\n\t\t\tbackground-color: transparent;\n\t\t\tcursor: pointer;\n\t\t\tdisplay: inline-block;\n\t\t}\n\t\n\t\t.Mask.vscode-button {\n\t\t\tbackground: transparent;\n\t\t\tborder: 0;\n\t\t\tbox-shadow: none;\n\t\t\tdisplay: inline-flex;\n\t\t\talign-items: center;\n\t\t\tjustify-content: center;\n\t\t\tcursor: pointer;\n\t\t\theight: 39px;\n\t\t\twidth: 38px;\n\t\t\tborder-radius: 4px;\n\t\t\toverflow: hidden;\n\t\t}\n\t\n\t\t/* Regola l\'immagine per adattarla alle dimensioni del bottone */\n\t\t.Mask.vscode-button .mask-image {\n\t\t\twidth: 70%;\n\t\t\theight: 70%;\n\t\t}\n\n\t\t.path{\n  \n\t\t\tfont-size: 15px;\n\t\t\tmargin-top: 0px;\n\t\t\tcolor: var(--vscode-editor-foreground);\n\t\t\tpadding-left: 30px;\n\t\t}\n  \n\t\t.button1{\n  \n\t\t  margin-left: auto;\n\t\t  margin-right: 6px;\n\t\t  position: relative;\n\t\t}\n\t  }\n\t  .first_line::before{\n\t\tcontent: " ";\n\t\tposition: absolute;\n\t\tleft: 0;\n\t\ttop: 70px;\n\t\theight: 1px;\n\t\twidth: 100%;\n\t\tborder-bottom: 1px solid lightgrey;\n\t  }\n  \n\t  .second_line{\n  \n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\ttext-align: center; \n\t\tmargin-top: 20px; \n\t\tborder-bottom: 1px solid var(--vscode-editor-foreground);\n  \n\t\t.bar{\n  \n\t\t  margin-right: 5px;\n\t\t  width: 100%;\n  \n\t\t  .searchInput{\n  \n\t\t\twidth: 75%; \n\t\t\theight: 20px; \n\t\t\tborder: 1px solid var(--vscode-input-border);\n        \tbackground-color: var(--vscode-input-background);\n        \tcolor: var(--vscode-input-foreground);\n        \tpadding: 4px 8px;\n        \tborder-radius: 3px;\n        \toutline: none;   \n\t\t  }\n\t\t  .searchInput::placeholder {\n\t\t\tcolor: var(--vscode-input-placeholderForeground);\n\t\t   }\n\t\t}\n  \n\t\t.allign1{\n  \n\t\t  display: flex;\n\t\t  justify-content: space-between;\n\t\t  width: 100%;\n  \n  \n\t\t  .tent1{\n  \n\t\t  display: flex;\n\t\t  flex-direction: column;\n\t\t  align-items: start;\n\t\t  font-size: 9px;\n\t\t  margin-top: 10px;\n\t\t  margin-left: 16%;\n\t\t  }\n  \n\t\t  .tent2{\n  \n\t\t\tdisplay: flex;\n\t\t\tflex-direction: column;\n\t\t\talign-items: start;\n\t\t\tfont-size: 9px;\n\t\t\tmargin-top: 10px;\n\t\t\tmargin-right: 16%;\n  \n\t\t  }\n\t\t}\n  \n\t  }\n  \n\t  .third_line{\n  \n\t\t\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\twidth: 100%;\n\t\toverflow-y: auto; /* Abilita lo scrolling verticale all\'interno della terza linea */\n\t\tmax-height: 400px; /* Altezza massima della div terza linea */\n\t\tmargin-top: 40px;\n\t\t\n\t\t.button{\n  \n\t\t\twidth: 82%;\n\t\t\tmin-height: 100px; /* Altezza minima desiderata per i bottoni */\n\t\t\tmax-height: 150px; /* Altezza massima desiderata per i bottoni */\n\t\t\tbackground-color: var(--vscode-input-background);\n\t\t\tcolor: var(--vscode-input-foreground);\n\t\t\tborder: 1px solid var(--vscode-input-border);\n\t\t\tpadding: 2px 5px;\n\t\t\tmargin-bottom: 5px;\n\t\t\tborder-radius: 4px;\n\t\t}  \n\t  }\n\n\t</style>\n\t</head>\n\t<body>\n\t  <div class="total_screen">\n\t\t<div class= "first_line">\n\t\t\t<img src="https://i.postimg.cc/yNNSbWdG/logo-polyglot-1.png" style="width: 120px; height: 61px;">\n\t\t\t<h1 class="path">Path</h1>\n\t\t\t<div class="button1">\n\t\t\t\x3c!-- Bottone con classe Bell --\x3e\n\t\t\t\t<button class="Bell vscode-button">\n\t\t\t\t\t<img class="bell-image" src="https://i.postimg.cc/nrXMwm3h/download-2-jfif.png" alt="Bell Image">\n\t\t\t\t</button>\n\t\t\t  \t<button class="Question vscode-button">\n\t\t\t\t\t<img class="question-image" src="https://i.postimg.cc/ZKTJRp8B/download-1.png" alt="Question Image">\n\t\t\t\t</button>\n\t\t\t  \t<button class="Mask vscode-button">\n\t\t\t\t\t<img class="mask.image" src="https://i.postimg.cc/J42nm1pv/Mask-Group-1.png" alt="Mark Image">\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>  \n\t\t<div class="second_line">\n\t\t  <h1 class="write1"><b>Learning path selection</b></h1>\n\t\t  <div class="bar">\n\t\t\t<input type="text" id="searchInput" class="searchInput" placeholder="Cerca..."></input>\n\t\t  </div>\n\t\t  <div class="allign1">\n\t\t\t<div class="tent1">\n\t\t\t  <h1 class="h1" style="color:lightgrey">Skills</h1>\n\t\t\t  <select id="option1" class="option1" style="font-size: 13px; width: 200px; height: 25px; background-color: var(--vscode-input-background); color: var(--vscode-input-foreground); border: 1px solid var(--vscode-input-border); padding: 2px 5px;">\n\t\t\t\t<option></option>\n\t\t\t  </select>  \n\t\t\t</div>\n\t\t\t<div class="tent2">\n\t\t\t  <h1 class="h2" style="color:lightgrey">Concepts</h1>\n\t\t\t  <select id="option2" style="font-size: 13px; width: 200px; height: 25px;background-color: var(--vscode-input-background); color: var(--vscode-input-foreground); border: 1px solid var(--vscode-input-border); padding: 2px 5px;">\n\t\t\t\t<option></option>\n\t\t\t  </select>\n\t\t\t</div>\n\t\t  </div>\n\t\t</div>  \n\t\t<div class="third_line"></div>\n\t  </div>\n\t  <script>\n\t\t(function(){\n\t\t\tconst vscode = acquireVsCodeApi();\n\n    const url = \'https://polyglot-api.polyglot-edu.com/api/flows\';\n\n    fetch(url)\n        .then((response) => {\n            return response.json();\n        })\n        .then((data) => {\n\n\t\t\t//put all the real data in a new variable to put out untitled flowpath\n            const filteredData = data.filter(item => {\n                const title = item.title.toLowerCase();\n                return !(title.includes("untitled") || title.includes("test") || title.includes("untit") || title.includes("grtet") || title.includes("dere") || title.includes("te"));\n            });\n\n\t\t\t//save all the title in a variable \n            const titles = filteredData.map(item => item.title);\n            const thirdLine = document.querySelector(".third_line");\n\n\t\t\t//create a variable names with the same length of data , for now is all empty\n\t\t\tvar names = new Array(filteredData.length).fill([]);  \n\n\t\t\t//iterate  all of the element that have a title\n\t\t\tfilteredData.forEach(function(item, index) {\n  \t\t\t\t// Verify if tags have an element or if it is empty\n  \t\t\t\tif (item.tags && item.tags.length > 0) {\n\t\t\t\t\t// create an array of name if tag isn\'t empty\n\t\t\t\t\tconst tagNames = item.tags.map(tag => tag.name);\n\t\t\t\t\t//add array name \n\t\t\t\t\tnames[index] = tagNames;\n  \t\t\t\t} else {\n\t\t\t\t\t//if the tag is empty I add an empty element in names\n\t\t\t\t\tnames[index] = [];\n  \t\t\t\t}\n\t\t\t});\n\t\t\t//now I have a variable with all the names respect of the tag and so the different path flow\n\n\t\t\t//variable to save univoce name\n\t\t\tconst uniqueNames = {};\n\n\t\t\t// Iterate all the element that have a title\n\t\t\tfilteredData.forEach(item => {\n  \t\t\t\t// extract the tag\n  \t\t\t\tconst tags = item.tags;\n\n  \t\t\t\t// interate in the tag objects\n  \t\t\t\ttags.forEach(tag => {\n   \t\t\t \t\t// extract the name tag\n    \t\t\t\tconst name = tag.name;\n\n    \t\t\t\t// Verify if the name was already see\n    \t\t\t\tif (!uniqueNames[name]) {\n      \t\t\t\t\t// if the name was alrealdy save i put it in the uniquenames\n      \t\t\t\t\tuniqueNames[name] = true;\n    \t\t\t\t}\n  \t\t\t\t});\n\t\t\t});\n\n\t\t\t// extract all the unique name in an array\n\t\t\tconst skill = Object.keys(uniqueNames);\n\t\t\tconst concept = Object.keys(uniqueNames);\n\t\t\n            for (let i = 0; i < titles.length; i++) {\n\n\t\t\t\tconst matchingItem = data.find(item => item.title === titles[i]);\n\t\t\t\tconst id = matchingItem ? matchingItem._id : null;\n\n                const bottone = document.createElement("button");\n                bottone.className = "button";\n\t\t\t\tbottone.setAttribute(\'id\', id);\n\t\t\t\tbottone.setAttribute(\'titles\', titles[i]);\n\t\t\t\tbottone.setAttribute(\'skills\', names[i]);\n\t\t\t\tbottone.setAttribute(\'concepts\', names[i]);\n\t\t\t\tvar tit = bottone.getAttribute(\'titles\');\n                bottone.innerText = tit;\n                thirdLine.appendChild(bottone);\n\n                bottone.addEventListener("click", function(event) {\n\n\t\t\t\t\trememberId = event.target.id;\n\t\t\t\t\tconsole.log(rememberId);\n\t\t\t\t\t//add the title to the global variable to remember the path clicked\n\t\t\t\t\trememberLearningPath = event.target.innerText;\n\t\t\t\t\tconsole.log(rememberLearningPath);\n\n                    vscode.postMessage({\n                        command: \'apriNotebook\',\n                        elementoCliccato: rememberLearningPath,\n\t\t\t\t\t\tidElementoCliccato: rememberId\n                    });\n                });\n            }\n\n\t\t\tconst selectDropdown = document.getElementById("option1");\n\t\t\t// interate in the name and save only unique name\n\t\t\tskill.forEach(name => {\n    \t\t\tconst option = document.createElement("option");\n    \t\t\toption.value = name; //the value of the option is the name\n    \t\t\toption.text = name;  // the text in the option is the name\n    \t\t\tselectDropdown.appendChild(option); // add the option in the tent menu 1\n\t\t\t});\n\n\t\t\tconst selectDropdown2 = document.getElementById("option2");\n\t\t\t//interate in the name and save only unique name\t\t\t\n\t\t\tconcept.forEach(name => {\n    \t\t\tconst option = document.createElement("option");\n    \t\t\toption.value = name; //the value of the option is the name\n    \t\t\toption.text = name;  // the text in the option is the name\n    \t\t\tselectDropdown2.appendChild(option); // add the option in the tent menu 2\n\t\t\t});\n\n\t\t\tconst searchInput = document.getElementById("searchInput");\n\t\t\tconst buttons = document.querySelectorAll(".button");\n\n\t\t\t//function to put visible or invisible all the button in the webview\n\t\t\tfunction updateButtonVisibility() {\n    \t\t\tconst selectedSkill = selectDropdown.value.toLowerCase();\n\t\t\t\tconst selectedConcept = selectDropdown2.value.toLowerCase();\n    \t\t\tconst searchText = searchInput.value.toLowerCase();\n\n    \t\t\tbuttons.forEach(button => {\n        \t\t\tconst buttonSkills = button.getAttribute("skills").toLowerCase();\n\t\t\t\t\tconst buttonConcepts = button.getAttribute("concepts").toLowerCase();\n        \t\t\tconst buttonTitle = button.innerText.toLowerCase();\n\t\t\t\t\t\n\t\t\t\t\tif (buttonSkills.includes(selectedSkill) && buttonTitle.includes(searchText) && buttonConcepts.includes(selectedConcept)) {\n            \t\t\tbutton.style.display = "block";\n        \t\t\t} else {\n            \t\t\tbutton.style.display = "none";\n        \t\t\t}\n    \t\t\t});\n\t\t\t}\n\n\t\t\tselectDropdown.addEventListener("change", updateButtonVisibility);\n\t\t\tselectDropdown2.addEventListener("change", updateButtonVisibility);\n\t\t\tsearchInput.addEventListener("input", updateButtonVisibility);\n        })\n        .catch(function(error) {\n            console.log(error);\n        });\n}());\n\t\t<\/script>\n\t</body>\n\t</html>',e.webview.onDidReceiveMessage((t=>{"apriNotebook"===t.command&&(console.log("Received apriNotebook command. elementoCliccato:",t.elementoCliccato),r=t.elementoCliccato,console.log("Received aprNotebook command. idElementoCliccato:",t.idElementoCliccato),a="3aaa2e43-3be9-4b52-87c9-c88eeafa6e60",console.log(a),n.commands.executeCommand("extension.page2"))}),void 0,t.subscriptions)})),n.commands.registerCommand("extension.page2",(()=>{const e=n.window.createWebviewPanel("page2","page2",n.ViewColumn.Two,{enableScripts:!0});e.title="Test Description",e.webview.html=`<!DOCTYPE html>\n\t<html lang="en">\n\t<head>\n\t\t<meta charset="UTF-8">\n\t\t<meta name="viewport" content="width=device-width, initial-scale=1.0">\n\t\t<title>DescriptionNotebook</title>\n\n\t\t<link rel="stylesheet" href="https://unpkg.com/vscode-codicons@4.0.0/dist/codicon.css">\n    \t<link rel="stylesheet" href="https://unpkg.com/vscode-codicons@4.0.0/dist/codicon.css">\n  \n\t    <style>\n            body{\n\t\t\tfont-family: 'Arial', sans-serif;\n\t\t}\n\n\t\tbody.vscode-dark{\n\t\t\tbackground-color: var(--vscode-editor-background);\n\t\t\tcolor: var(--vscode-foreground);\n\t\t}\n\n\t\tbody.vscode-light{\n\t\t\tbackground-color: var(--vscode-editor-background);\n\t\t\tcolor: var(--vscode-foreground);\n\t\t}\n  \n\t  .total_screen{\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\toverflow: hidden;\n\t\theight: 100vh;\n\t  }\n  \n\t  .first_line{\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tborder-bottom: 1px solid var(--vscode-editor-foreground);\n\n\t\t.path{\n  \n\t\t  font-size: 15px;\n\t\t  margin-top: 0px;\n\t\t  color: var(--vscode-editor-foreground);\n\t\t  padding-left: 30px;\n\t\t}\n\t  }\n\t  .first_line::before{\n\t\tcontent: " ";\n\t\tposition: absolute;\n\t\tleft: 0;\n\t\ttop: 70px;\n\t\theight: 1px;\n\t\twidth: 100%;\n\t\tborder-bottom: 1px solid lightgrey;\n\t  }\n\n      .second_line{\n        display: flex;\n        align-items: left;\n        border-bottom: 1px solid var(--vscode-editor-foreground);\n        margin-top: 27px;\n        margin-left: 12px;\n        flex-direction: column;\n\t\tmin-height: 76%;\n\n\n        .h1{\n            font-size: 15px;\n\t\t    margin-top: 0px;\n\t\t    color: var(--vscode-editor-foreground);\n\t\t    padding-left: 30px;\n        }\n      }\n\n\t  .third_line{\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\n\t\t.nextQuiz{\n\t\t\tmargin-top: 10px;\n\t\t\twidth: 30%;\n\t\t\tmin-height: 60px; /* Altezza minima desiderata per i bottoni */\n\t\t\tmax-height: 80px; /* Altezza massima desiderata per i bottoni */\n\t\t\tbackground-color: var(--vscode-input-background);\n\t\t\tcolor: var(--vscode-input-foreground);\n\t\t\tborder: 1px solid var(--vscode-input-border);\n\t\t\tpadding: 2px 5px;\n\t\t\tmargin-bottom: 5px;\n\t\t\tborder-radius: 4px;\n\t\t\n\t\t}\n\t  }\n      \n\t    </style>\n\t</head>\n\t    <body>\n\t        <div class="total_screen">\n                <div class= "first_line">\n                    <img src="https://i.postimg.cc/yNNSbWdG/logo-polyglot-1.png" style="width: 120px; height: 61px;">\n                    <h1 class="path">Learning Path</h1>\n                </div>\n                <div class="second_line" id="second_line">\n                    <h1 class="theory">Theory</h1>\n                    <h1 class="description" id="description"></h1>\n                </div>\n\t\t\t\t<div class="third_line">\n\t\t\t\t\t<button class="nextQuiz">Next Quiz</button>\n\t\t\t\t</div>\n            </div>\n\n<script type="module">\n\n    (function(){\n\n\t\tconst vscode = acquireVsCodeApi();\n\n        const apiUrl = 'https://polyglot-api.polyglot-edu.com/api/flows';\n\n        // Aggiungi un ID all'elemento "description" per facilitare la selezione\n        const descriptionElement = document.querySelector('.second_line .description');\n\n\t\t//let ciaone = "Introduction Applied Machine Learning"\n\n\t\tconst learningPath = '${r}'; // Usa il valore passato come parametro\n\t\tconsole.log(learningPath);\n\n\t\tconst learningId = '${a}';\n\t\tconsole.log(learningId);\n\n        fetch(apiUrl)\n            .then(response => response.json())\n            .then(data => {\n                // Find the first item that matches the condition\n                const matchingItem = data.find(item => item.title === learningPath );\n\n                if (matchingItem) {\n                    // If a matching item is found, set the description\n                    descriptionElement.textContent = matchingItem.description;\n                    console.log(matchingItem.description);\n                } else {\n                    // Handle the case where no matching item is found\n                    console.error('No matching item found for', learningPath);\n                }\n            })\n            .catch(error => console.error('Error during API request:', error));\n\n\n\t\t\tconst nextQuizButton = document.querySelector('.nextQuiz');\n\t\t\tnextQuizButton.addEventListener('click', function(){\n\n\t\t\t\tconsole.log('button clicked');\n\n\t\t\t\tconst apiUrl = 'https://polyglot-api.polyglot-edu.com/api/execution/first';\n\t\t\t\t\n\t\t\t\t//data to send in the POST request\n\t\t\t\tconst postData = {\n\t\t\t\t\tflowId: learningId\n\t\t\t\t};\n\n\t\t\t\tconst requestOptions = {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t\t},\n\t\t\t\t\tbody: JSON.stringify(postData)\n\t\t\t\t};\n\n\t\t\t\t//do the call POST to the API\n\t\t\t\tfetch(apiUrl, requestOptions)\n\t\t\t\t\t.then(response => {\n\t\t\t\t\t\tif(!response.ok){\n\t\t\t\t\t\t\tthrow new Error('Errore nella richiesta');\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn response.json();\n\t\t\t\t\t})\n\t\t\t\t\t.then(data => {\n\t\t\t\t\t\tconsole.log('Dati ricevuti:', data);\n\n\t\t\t\t\t\tconst question = data.firstNode.data.question;\n\n\t\t\t\t\t\tvscode.postMessage({\n\t\t\t\t\t\t\tcommand: 'openTypeQuiz',\n\t\t\t\t\t\t\telementoCliccato: question\n\t\t\t\t\t\t});\n\n\t\t\t\t\t})\n\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\tconsole.error('Errore nella chiamata API:', error.message);\n\t\t\t\t\t});\n\t\t\t})\n    }());\n<\/script>\n\t    </body>\n\t</html>`,e.webview.onDidReceiveMessage((t=>{"openTypeQuiz"===t.command&&(console.log("Received apriNotebook command. elementoCliccato:",t.elementoCliccato),s=t.elementoCliccato)}),void 0,t.subscriptions)})),t.subscriptions.push(e)}})();var i=exports;for(var r in o)i[r]=o[r];o.__esModule&&Object.defineProperty(i,"__esModule",{value:!0})})();